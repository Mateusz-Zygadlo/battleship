(()=>{"use strict";const e=e=>{const t=document.querySelector(".gameboard");t.textContent="";for(let a=0;a<10;a++)for(let d=0;d<10;d++)if("x"==e[a][d]){const e=document.createElement("div");e.classList.add("checked"),e.dataset.row=a,e.dataset.column=d,t.appendChild(e)}else{const e=document.createElement("div");e.classList.add("gameField"),e.dataset.row=a,e.dataset.column=d,t.appendChild(e)}},t=e=>{const t=document.querySelector(".ships");t.textContent="";for(let a=0;a<e.length;a++)if(1==e[a].land);else{const d=document.createElement("div");d.classList.add("ship"),d.dataset.id=e[a].id,d.classList.add(e[a].name),d.style.gridTemplateColumns=`repeat(${e[a].size}, 1fr)`,d.style.width=`calc(${e[a].id} * 50px)`,d.style.height="50px",d.style.backgroundColor="black",d.draggable=!0;for(let t=0;t<e[a].size;t++){const e=document.createElement("div");e.classList.add("square"),d.appendChild(e)}t.appendChild(d)}},a=[{name:"Destroyer",size:2,id:2,land:!1,position:[]},{name:"Submarine",size:3,id:3,land:!1,position:[]},{name:"Cruiser",size:3,id:3,land:!1,position:[]},{name:"Battleship",size:4,id:4,land:!1,position:[]},{name:"Carrier",size:5,id:5,land:!1,position:[]}];let d;const s=[];let l=0;for(let e=0;e<10;e++){const e=[];for(let t=0;t<10;t++)e.push(l),l++;s.push(e)}e(s),t(a),document.addEventListener("dragstart",(e=>{d=e.target,e.target.style.opacity=.3}),!1),document.addEventListener("dragend",(e=>{e.target.style.opacity="",e.target.dataset.row=e.target.firstChild.dataset.row,e.target.dataset.column=e.target.firstChild.dataset.column}),!1),document.addEventListener("dragover",(e=>{e.preventDefault()}),!1),document.addEventListener("dragenter",(e=>{"gameField"==e.target.className&&(e.target.style.background="yellow")}),!1),document.addEventListener("dragleave",(e=>{"gameField"==e.target.className&&(e.target.style.background="")}),!1),document.addEventListener("drop",(l=>{if(l.preventDefault(),"gameField"==l.target.className){l.target.style.background="",l.target.appendChild(d);let e=!1,n=l.target.dataset.row+l.target.dataset.column,r=Number(n);n.split("")[0],n.split("")[1];for(let e=0;e<n.split("").length;e++)0==n.split("")[0]&&(n=n.split("")[1]);const o=l.target.firstChild.className.split(" ")[1];let i,c;for(let e=0;e<a.length;e++)a[e].name==o&&(i=a[e].size,c=e);const g=r,m=r+i-1,p=[];for(let e=g;e<=m;e++)p.push(e);const u=(e,t,d,s)=>{for(let s=0;s<e.length;s++)if(e[s].includes(t))return!!e[s].includes(d)&&(!0,a[c].land=!0,true)};if(u(s,g,m,e)){l.target.style.background="",d.parentNode.removeChild(d),l.target.appendChild(d);for(let e=0;e<s.length;e++)for(let t=0;t<s[e].length;t++)if(s[e][t]==g)for(let d=0;d<i;d++)a[c].position.push(s[e][t+d]),s[e][t+d]="x";d.parentNode.removeChild(d)}else d.parentNode.removeChild(d),l.target.style.background="",t(a),a[c].land=!1;t(a)}e(s),console.log(s),console.log(a)}),!1)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,